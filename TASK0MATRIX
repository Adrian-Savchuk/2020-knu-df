{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "ilWBQP4l1Tv9",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import torch\n",
        "import torchvision\n",
        "import torchvision.transforms as transforms\n",
        "import time"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "x2cgnLaK1Xz5",
        "colab_type": "code",
        "outputId": "33dac21a-2c27-4a78-ea71-436cc26ec942",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        }
      },
      "source": [
        "device = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\n",
        "\n",
        "transform = transforms.Compose(\n",
        "    [transforms.ToTensor(),\n",
        "     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n",
        "\n",
        "trainset = torchvision.datasets.CIFAR10(root='./data', train=True,\n",
        "                                        download=True, transform=transform)\n",
        "trainloader = torch.utils.data.DataLoader(trainset, batch_size=256,\n",
        "                                          shuffle=True, num_workers=2)\n",
        "\n",
        "testset = torchvision.datasets.CIFAR10(root='./data', train=False,\n",
        "                                       download=True, transform=transform)\n",
        "testloader = torch.utils.data.DataLoader(testset, batch_size=256,\n",
        "                                         shuffle=False, num_workers=2)\n",
        "\n",
        "classes = ('plane', 'car', 'bird', 'cat',\n",
        "           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\r0it [00:00, ?it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./data/cifar-10-python.tar.gz\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "170500096it [00:04, 42619628.34it/s]                               \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Extracting ./data/cifar-10-python.tar.gz to ./data\n",
            "Files already downloaded and verified\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OXPysehT1X2s",
        "colab_type": "code",
        "outputId": "43be67a6-89d2-471b-8060-6e0c356c0868",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 286
        }
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "# functions to show an image\n",
        "\n",
        "\n",
        "def imshow(img):\n",
        "    img = img / 2 + 0.5     # unnormalize\n",
        "    npimg = img.numpy()\n",
        "    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n",
        "\n",
        "\n",
        "# get some random training images\n",
        "dataiter = iter(trainloader)\n",
        "images, labels = dataiter.next()\n",
        "\n",
        "# show images\n",
        "imshow(torchvision.utils.make_grid(images))\n",
        "# print labels\n",
        "print(' '.join('%5s' % classes[labels[j]] for j in range(4)))"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            " frog  deer  frog  ship\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n9CJ0AAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Nl5ydzwE1X5T",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import torch.nn as nn\n",
        "import torch.nn.functional as F\n",
        "\n",
        "\n",
        "class Better_net(nn.Module):\n",
        "    def __init__(self):\n",
        "        super(Better_net, self).__init__()\n",
        "        self.conv1 = nn.Conv2d(3, 64, 3, padding = 1)\n",
        "        self.bnm1 = nn.BatchNorm2d(64)\n",
        "        self.conv2 = nn.Conv2d(64, 64, 3, padding = 1)\n",
        "        self.bnm2 = nn.BatchNorm2d(64)\n",
        "        self.conv3 = nn.Conv2d(64, 64, 3, padding = 1)\n",
        "        self.bnm3 = nn.BatchNorm2d(64)\n",
        "\n",
        "        self.conv4 = nn.Conv2d(64, 128, 3, padding = 1)\n",
        "        self.bnm4 = nn.BatchNorm2d(128)\n",
        "        self.conv5 = nn.Conv2d(128, 128, 3, padding = 1)\n",
        "        self.bnm5 = nn.BatchNorm2d(128)\n",
        "        self.conv6 = nn.Conv2d(128, 128, 3, padding = 1)\n",
        "        self.bnm6 = nn.BatchNorm2d(128)\n",
        "        \n",
        "        self.conv7 = nn.Conv2d(128, 256, 3, padding = 1)\n",
        "        self.bnm7 = nn.BatchNorm2d(256)\n",
        "        self.conv8 = nn.Conv2d(256, 256, 3, padding = 1)\n",
        "        self.bnm8 = nn.BatchNorm2d(256)\n",
        "        self.conv9 = nn.Conv2d(256, 256, 3, padding = 1)\n",
        "        self.bnm9 = nn.BatchNorm2d(256)\n",
        "\n",
        "        self.conv10 = nn.Conv2d(256, 256, 3, padding = 1)\n",
        "        self.bnm10 = nn.BatchNorm2d(256)\n",
        "        self.conv11 = nn.Conv2d(256, 256, 3, padding = 1)\n",
        "        self.bnm11 = nn.BatchNorm2d(256)\n",
        "        self.conv12 = nn.Conv2d(256, 256, 3, padding = 1)\n",
        "        self.bnm12 = nn.BatchNorm2d(256)\n",
        "       \n",
        "        self.conv13 = nn.Conv2d(256, 512, 3, padding = 1)\n",
        "        self.bnm13 = nn.BatchNorm2d(512)\n",
        "        self.conv14 = nn.Conv2d(512, 512, 3, padding = 1)\n",
        "        self.bnm14 = nn.BatchNorm2d(512)\n",
        "        self.conv15 = nn.Conv2d(512, 512, 3, padding = 1)\n",
        "        self.bnm15 = nn.BatchNorm2d(512)\n",
        "       \n",
        "        self.conv16 = nn.Conv2d(512, 1028, 3, padding = 1)\n",
        "        self.bnm16 = nn.BatchNorm2d(1028)\n",
        "        self.conv17 = nn.Conv2d(1028, 1028, 3, padding = 1)\n",
        "        self.bnm17 = nn.BatchNorm2d(1028)\n",
        "        self.conv18 = nn.Conv2d(1028, 1028, 3, padding = 1)\n",
        "        self.bnm18 = nn.BatchNorm2d(1028)\n",
        "        \n",
        "        self.fc1 = nn.Linear(1 * 1 * 1028, 1500)\n",
        "        self.fc2 = nn.Linear(1500, 300)\n",
        "        self.fc3 = nn.Linear(300, 150)\n",
        "        self.fc4 = nn.Linear(150, 10)\n",
        "\n",
        "    def forward(self, x):\n",
        "\n",
        "        x = F.relu(self.conv1(x))\n",
        "        x = self.bnm1(x)\n",
        "        x = F.relu(self.conv2(x))\n",
        "        x = self.bnm2(x)\n",
        "        x = F.relu(self.conv3(x))\n",
        "        x = self.bnm3(x)\n",
        "        x = F.max_pool2d(x, 2, 2)\n",
        "\n",
        "        x = F.relu(self.conv4(x))\n",
        "        x = self.bnm4(x)\n",
        "        x = F.relu(self.conv5(x))\n",
        "        x = self.bnm5(x)\n",
        "        x = F.relu(self.conv6(x))\n",
        "        x = self.bnm6(x)\n",
        "        x = F.max_pool2d(x, 2, 2)\n",
        "\n",
        "        x = F.relu(self.conv7(x))\n",
        "        x = self.bnm7(x)\n",
        "        x = F.relu(self.conv8(x))\n",
        "        x = self.bnm8(x)\n",
        "        x = F.relu(self.conv9(x))\n",
        "        x = self.bnm9(x)\n",
        "\n",
        "        x = F.relu(self.conv10(x))\n",
        "        x = self.bnm10(x)\n",
        "        x = F.relu(self.conv11(x))\n",
        "        x = self.bnm11(x)\n",
        "        x = F.relu(self.conv12(x))\n",
        "        x = self.bnm12(x)\n",
        "        x = F.max_pool2d(x, 2, 2)\n",
        "\n",
        "        x = F.relu(self.conv13(x))\n",
        "        x = self.bnm13(x)\n",
        "        x = F.relu(self.conv14(x))\n",
        "        x = self.bnm14(x)\n",
        "        x = F.relu(self.conv15(x))\n",
        "        x = self.bnm15(x)\n",
        "        x = F.max_pool2d(x, 2, 2)\n",
        "\n",
        "        x = F.relu(self.conv16(x))\n",
        "        x = self.bnm16(x)\n",
        "        x = F.relu(self.conv17(x))\n",
        "        x = self.bnm17(x)\n",
        "        x = F.relu(self.conv18(x))\n",
        "        x = self.bnm18(x)\n",
        "        x = F.max_pool2d(x, 2, 2)\n",
        "\n",
        "\n",
        "        x = x.view(-1, 1 * 1 * 1028)\n",
        "        x = F.relu(self.fc1(x))\n",
        "        x = F.relu(self.fc2(x))\n",
        "        x = F.relu(self.fc3(x))\n",
        "        x = self.fc4(x)\n",
        "        return F.log_softmax(x, dim=1)\n",
        "\n",
        "\n",
        "net = Better_net().to(device)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iQ7KayUl1X9r",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import torch.optim as optim\n",
        "\n",
        "criterion = nn.CrossEntropyLoss()\n",
        "optimizer = optim.SGD(net.parameters(), lr=0.01 , momentum=0.9)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ACr-9xgG1YCy",
        "colab_type": "code",
        "outputId": "74729ba0-14f6-43be-ca61-5173257d82eb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        }
      },
      "source": [
        "for epoch in range(100):  # loop over the dataset multiple times\n",
        "\n",
        "    running_loss = 0.0\n",
        "    for i, data in enumerate(trainloader, 0):\n",
        "        # get the inputs\n",
        "        inputs, labels = data\n",
        "        inputs, labels = inputs.cuda(), labels.cuda()\n",
        "\n",
        "        # zero the parameter gradients\n",
        "        optimizer.zero_grad()\n",
        "\n",
        "        # forward + backward + optimize\n",
        "        outputs = net(inputs)\n",
        "        loss = criterion(outputs, labels)\n",
        "        loss.backward()\n",
        "        optimizer.step()\n",
        "\n",
        "        # print statistics\n",
        "        running_loss += loss.item()\n",
        "        #print('Loss: ', running_loss)\n",
        "        if i % 64000 == 63999:    # print every 2000 mini-batches\n",
        "            print('[Epoch: %d, Batches: %5d] loss: %.3f' %\n",
        "                  (epoch + 1, i + 1, running_loss / 2000))\n",
        "            running_loss = 0.0\n",
        "    correct = 0\n",
        "    total = 0\n",
        "    with torch.no_grad():\n",
        "      for data in testloader:\n",
        "        images, labels = data\n",
        "        images, labels = images.cuda(), labels.cuda()\n",
        "        outputs = net(images)\n",
        "        _, predicted = torch.max(outputs.data, 1)\n",
        "        total += labels.size(0)\n",
        "        correct += (predicted == labels).sum().item()\n",
        "    print('Epoch: ', epoch + 1)\n",
        "    print('Accuracy of the network: {}%'.format(\n",
        "      100 * correct / total))\n",
        "\n",
        "print('Finished Training')"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch:  1\n",
            "Accuracy of the network: 59.58%\n",
            "Epoch:  2\n",
            "Accuracy of the network: 72.23%\n",
            "Epoch:  3\n",
            "Accuracy of the network: 77.65%\n",
            "Epoch:  4\n",
            "Accuracy of the network: 79.56%\n",
            "Epoch:  5\n",
            "Accuracy of the network: 81.96%\n",
            "Epoch:  6\n",
            "Accuracy of the network: 82.09%\n",
            "Epoch:  7\n",
            "Accuracy of the network: 83.23%\n",
            "Epoch:  8\n",
            "Accuracy of the network: 83.13%\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-6-c501dd7c897f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m         \u001b[0;31m# print statistics\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 19\u001b[0;31m         \u001b[0mrunning_loss\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mloss\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     20\u001b[0m         \u001b[0;31m#print('Loss: ', running_loss)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mi\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;36m64000\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m63999\u001b[0m\u001b[0;34m:\u001b[0m    \u001b[0;31m# print every 2000 mini-batches\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K9kdBpzp8vBZ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "PATH = './cifar_net.pth'\n",
        "torch.save(net.state_dict(), PATH)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HrCv7dwk8vPj",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "574037a7-9bea-41ba-c046-35335a511bee"
      },
      "source": [
        "total_correct = 0\n",
        "total_images = 0\n",
        "confusion_matrix = np.zeros([10,10], int)\n",
        "with torch.no_grad():\n",
        "    for data in testloader:\n",
        "        images, labels = data\n",
        "        images, labels = images.to(device), labels.to(device)\n",
        "        outputs = net(images)\n",
        "        _, predicted = torch.max(outputs.data, 1)\n",
        "        total_images += labels.size(0)\n",
        "        total_correct += (predicted == labels).sum().item()\n",
        "        for i, l in enumerate(labels):\n",
        "            confusion_matrix[l.item(), predicted[i].item()] += 1 \n",
        "\n",
        "model_accuracy = total_correct / total_images * 100\n",
        "print('Model accuracy on {0} test images: {1:.2f}%'.format(total_images, model_accuracy))"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model accuracy on 10000 test images: 83.50%\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lsbQapT48vS0",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "f20f591d-ab69-40d1-bc91-b1f4bef9b704"
      },
      "source": [
        "print('{0:10s} - {1}'.format('Category','Accuracy'))\n",
        "for i, r in enumerate(confusion_matrix):\n",
        "    print('{0:10s} - {1:.1f}'.format(classes[i], r[i]/np.sum(r)*100))"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Category   - Accuracy\n",
            "plane      - 84.8\n",
            "car        - 90.9\n",
            "bird       - 80.1\n",
            "cat        - 68.8\n",
            "deer       - 82.3\n",
            "dog        - 75.0\n",
            "frog       - 84.4\n",
            "horse      - 87.7\n",
            "ship       - 90.3\n",
            "truck      - 90.7\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W5P1yXwd86gY",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 388
        },
        "outputId": "06a7a9fe-124a-4d82-ffcf-4625ed590a0a"
      },
      "source": [
        "fig, ax = plt.subplots(1,1,figsize=(8,6))\n",
        "ax.matshow(confusion_matrix, aspect='auto', vmin=0, vmax=1000, cmap=plt.get_cmap('Reds'))\n",
        "plt.ylabel('Actual Category')\n",
        "plt.yticks(range(10), classes)\n",
        "plt.xlabel('Predicted Category')\n",
        "plt.xticks(range(10), classes)\n",
        "plt.show()\n"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nwqIvSVJH/F/8S3sBR0MyfgAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 576x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Jysut_Wm86nN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "print('actual/pred'.ljust(16), end='')\n",
        "for i,c in enumerate(classes):\n",
        "    print(c.ljust(10), end='')\n",
        "print()\n",
        "for i,r in enumerate(confusion_matrix):\n",
        "    print(classes[i].ljust(16), end='')\n",
        "    for idx, p in enumerate(r):\n",
        "        print(str(p).ljust(10), end='')\n",
        "    print()\n",
        "    \n",
        "    r = r/np.sum(r)\n",
        "    print(''.ljust(16), end='')\n",
        "    for idx, p in enumerate(r):\n",
        "        print(str(p).ljust(10), end='')\n",
        "    print()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fDHit5QU86kp",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.metrics import precision_recall_fscore_support as score\n",
        "\n",
        "pred = [] \n",
        "y_test = []\n",
        "\n",
        "with torch.no_grad():\n",
        "    for data in testloader:\n",
        "        images, labels = data\n",
        "        images, labels = images.to(device), labels.to(device)\n",
        "        outputs = net(images)\n",
        "        _, predicted = torch.max(outputs.data, 1)\n",
        "        for i in range(len(predicted)):\n",
        "            pred.append(classes[predicted[i]])\n",
        "            y_test.append(classes[labels[i]])\n",
        "\n",
        "precision, recall, fscore, support = score(y_test, pred)\n",
        "\n",
        "print('precision: {}'.format(precision))\n",
        "print('recall: {}'.format(recall))\n",
        "print('fscore: {}'.format(fscore))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XGzPNDb91YH8",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 286
        },
        "outputId": "4f9ada72-d15f-4f4c-d8e7-58768d1a7dbb"
      },
      "source": [
        "dataiter = iter(testloader)\n",
        "images, labels = dataiter.next()\n",
        "\n",
        "# print images\n",
        "imshow(torchvision.utils.make_grid(images))\n",
        "print('GroundTruth: ', ' '.join('%5s' % classes[labels[j]] for j in range(4)))"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "GroundTruth:    cat  ship  ship plane\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iaOExuHW1YMq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "images, labels = images.to(device), labels.to(device)\n",
        "outputs = net(images)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XaoSsBFK1YKz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "245b8c95-bc68-4204-baaa-2b12997dc427"
      },
      "source": [
        "_, predicted = torch.max(outputs, 1)\n",
        "\n",
        "print('Predicted: ', ' '.join('%5s' % classes[predicted[j]]\n",
        "                              for j in range(4)))"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Predicted:  horse  bird  ship plane\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AVvMg77R1YGa",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "b357723e-e117-4848-ee85-e0c91e59b5b7"
      },
      "source": [
        "correct = 0\n",
        "total = 0\n",
        "with torch.no_grad():\n",
        "    for data in testloader:\n",
        "        images, labels = data\n",
        "        images, labels = images.to(device), labels.to(device)\n",
        "        outputs = net(images)\n",
        "        _, predicted = torch.max(outputs.data, 1)\n",
        "        total += labels.size(0)\n",
        "        correct += (predicted == labels).sum().item()\n",
        "\n",
        "print('Accuracy of the network on the 10000 test images: %d %%' % (\n",
        "    100 * correct / total))"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy of the network on the 10000 test images: 83 %\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "51b5Zvsy1YAo",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        },
        "outputId": "00199718-5464-48d8-84cd-d0833d3dc8c3"
      },
      "source": [
        "class_correct = list(0. for i in range(10))\n",
        "class_total = list(0. for i in range(10))\n",
        "with torch.no_grad():\n",
        "    for data in testloader:\n",
        "        images, labels = data\n",
        "        images, labels = images.to(device), labels.to(device)\n",
        "        outputs = net(images)\n",
        "        _, predicted = torch.max(outputs, 1)\n",
        "        c = (predicted == labels).squeeze()\n",
        "        for i in range(4):\n",
        "            label = labels[i]\n",
        "            class_correct[label] += c[i].item()\n",
        "            class_total[label] += 1\n",
        "\n",
        "\n",
        "for i in range(10):\n",
        "    print('Accuracy of %5s : %2d %%' % (\n",
        "        classes[i], 100 * class_correct[i] / class_total[i]))"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy of plane : 93 %\n",
            "Accuracy of   car : 92 %\n",
            "Accuracy of  bird : 92 %\n",
            "Accuracy of   cat : 68 %\n",
            "Accuracy of  deer : 76 %\n",
            "Accuracy of   dog : 73 %\n",
            "Accuracy of  frog : 77 %\n",
            "Accuracy of horse : 91 %\n",
            "Accuracy of  ship : 90 %\n",
            "Accuracy of truck : 94 %\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}